######################################################################
# Automatically generated by qmake
# > qmake.exe -project
######################################################################
TEMPLATE = app
TARGET   = launcher
QT       += core


CONFIG += console
CONFIG += c++11

gcc|clang{
    QMAKE_CFLAGS += -std=c99
    QMAKE_CXXFLAGS += -std=c++11
}

lessThan(QT_VERSION, 5.0) {
    warning("prefere to build it with Qt 5.0")
}


#-------------------------------------------------
# SOURCES
#-------------------------------------------------
SOURCES += \
    $$PWD/launcher.cpp


#-------------------------------------------------
# RESOURCES
#-------------------------------------------------
win32|unix {
    RC_FILE += $$PWD/../../src/resources_win.rc
}


#-------------------------------------------------
# BUILD OPTIONS
#-------------------------------------------------

# Rem: On Ubuntu, directories starting with '.' are hidden by default
win32{
    MOC_DIR =      ./.moc
    OBJECTS_DIR =  ./.obj
    UI_DIR =       ./.ui
}else{
    MOC_DIR =      ./_moc
    OBJECTS_DIR =  ./_obj
    UI_DIR =       ./_ui
}

#-------------------------------------------------
# OUTPUT
#-------------------------------------------------
#build_pass:CONFIG(debug, debug|release) {
#    unix: TARGET = $$join(TARGET,,,_debug)
#    else: TARGET = $$join(TARGET,,,d)
#}


#-------------------------------------------------
# TARGET DIRECTORY
#-------------------------------------------------
# Needs to define a subfolder, as the *.DLL
# cannot be copied in the root folder.
DESTDIR = $${OUT_PWD}/../../downzemall_install

#-------------------------------------------------
# INSTALL
#-------------------------------------------------
# Remark:
# =======
# Eventually, in your favorite IDE, replace build chain command
#   'make'
# by
#   'make install'
#
# It will install the DLLs, documentation, data, etc.
# that are required to execute the application.
#

# instructions for 'make install'

manifests_to_copy.files += $$PWD/launcher-manifest-chrome.json
manifests_to_copy.files += $$PWD/launcher-manifest-firefox.json
manifests_to_copy.path = $${DESTDIR}/
INSTALLS += manifests_to_copy

scripts_to_copy.files += $$PWD/../setup/ReadMe.txt
scripts_to_copy.files += $$PWD/../setup/install.bat
scripts_to_copy.files += $$PWD/../setup/uninstall.bat
scripts_to_copy.path = $${DESTDIR}/
INSTALLS += scripts_to_copy
